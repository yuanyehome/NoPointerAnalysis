public class test.TestLargerField extends java.lang.Object
{

    public void <init>()
    {
        test.TestLargerField r0;

        r0 := @this: test.TestLargerField;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        test.TestLargerField$X $r4;
        benchmark.objects.A $r5, $r7, $r8, $r10;
        benchmark.objects.B $r6, $r9;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <benchmark.internal.BenchmarkN: void alloc(int)>(1);

        $r4 = new test.TestLargerField$X;

        specialinvoke $r4.<test.TestLargerField$X: void <init>()>();

        staticinvoke <benchmark.internal.BenchmarkN: void alloc(int)>(2);

        $r5 = new benchmark.objects.A;

        specialinvoke $r5.<benchmark.objects.A: void <init>()>();

        staticinvoke <benchmark.internal.BenchmarkN: void alloc(int)>(3);

        $r6 = new benchmark.objects.B;

        specialinvoke $r6.<benchmark.objects.B: void <init>()>();

        $r7 = $r4.<test.TestLargerField$X: benchmark.objects.A a>;

        $r7.<benchmark.objects.A: benchmark.objects.B f> = $r6;

        $r8 = $r4.<test.TestLargerField$X: benchmark.objects.A a>;

        $r9 = $r8.<benchmark.objects.A: benchmark.objects.B f>;

        staticinvoke <benchmark.internal.BenchmarkN: void test(int,java.lang.Object)>(1, $r9);

        $r4.<test.TestLargerField$X: benchmark.objects.A a> = $r5;

        $r10 = $r4.<test.TestLargerField$X: benchmark.objects.A a>;

        staticinvoke <benchmark.internal.BenchmarkN: void test(int,java.lang.Object)>(2, $r10);

        staticinvoke <benchmark.internal.BenchmarkN: void test(int,java.lang.Object)>(3, $r4);

        return;
    }
}
